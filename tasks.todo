Steps:
 ☐ Frontend MVP then CRUD
 ✔ Course - View @done (17-07-29 03:05)
 ✔ Course - Detail @done (17-07-29 03:05)
 ✔ Course - Create @done (17-07-29 03:47)
 ✔ Course - Update @done (17-07-29 03:43)
 ✔ Courses - List @done (17-07-29 03:05)
 ☐ NavBar
 ☐ CRUD app for (Course/Teacher/Register/)
 ✔ Profile - List @done (17-07-29 05:05)
 ✔ Profile - Detail @done (17-07-29 04:54)
 ✔ Profile - Update @done (17-07-29 05:05)
 ✔ Profile - Delete @done (17-07-29 05:08)
 ☐ Register - Create
 ☐ UnRegister - Delete
 ☐ MyRegistration - List
 ☐ Comment - Create - Postpone
 ☐ Comment - Delete - Postpone
 ✔ AuthorMixin @done (17-07-29 05:23)
 ✔ Create front end @done (17-07-29 01:48)
 ☐ Dashboard/Footer how many objects in db.
 ☐ Remove Categories
 ☐ Add messages in frontend
 ☐ Continue with the Frontend (integration of the Wireframe) finish it. MVP
 ☐ Test the app (functionnal programming)
 ☐ Do a MVP test (TDD)
 ☐ Do a MVP (frontend) --- real basic
 ☐ add license
 ☐ Add slug
 ☐ Prefetch/Select related mixin
 ☐ Payments --- user
 ☐ <i class="fa fa-eye" aria-hidden="true"></i>
 ☐ Superuser admin@gmail.com famille

Helper:
 ☐ Infinte scroll
   ☐ https://simpleisbetterthancomplex.com/tutorial/2017/03/13/how-to-create-infinite-scroll-with-django.html
 ☐ Card
   ☐ https://bootsnipp.com/snippets/aeqlE
   ☐ ☐Self author
   ☐ https://stackoverflow.com/questions/18172102/object-ownership-validation-in-django-updateview
   ☐ 

Question:
 ☐ What is the difference between a user is deleting a view (AuthorMixin) and DeleteView

helps:
 ☐ https://github.com/ShareClass/ShareClass/blob/d204f7c80729bc024cd10bd527ff8667224c5ff3/shareclass/course/models.py
 ☐ https://github.com/search?o=desc&q=language%3Apython++filename%3Amodels.py+course+django&s=indexed&type=Code&utf8=%E2%9C%93

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ create applications.elearning.urls.py @done (17-07-25 02:03) @project(Steps)
 ✔ Decide if I should do the template first @done (17-07-23 08:38) @project(Steps)
 ✔ Test the Models (have some issue there) @done (17-07-23 07:08) @project(Steps)
 ✔ Select which frontend framework to use @done (17-07-23 07:08) @project(Steps)
 ✔ Review the Models to see if it makes sense @done (17-07-23 07:08) @project(Steps)
 ✔ Do a wireframe @done (17-07-23 07:08) @project(Steps)
 ✔ Boostrap Material design @done (17-07-23 07:08) @project(Steps)
 ✔ Create an ERD (Entity-relationship-diagram) of the Model @done (17-07-19 02:03) @project(Steps)
 ✔ choose django==1.11 @done (17-07-19 01:07) @project(Steps)
 ✔ Start the application @done (17-07-19 01:07) @project(Steps)
 ✔ Set the project configuration for different environment @done (17-07-19 01:07) @project(Steps)
 ✔ Create a django project Last version minus 2 @done (17-07-19 01:07) @project(Steps)
 ✔ Choose the name of the project (codeforentrepreneurs) @done (17-07-19 01:07) @project(Steps)
