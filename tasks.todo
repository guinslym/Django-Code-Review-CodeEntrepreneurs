Steps:
 ☐ Frontend
   ☐ Dashboard
      ✔ Create Course @done (17-07-31 04:55)
      ✔ View My Votes @done (17-07-31 03:32)
      ✔ Add money into account (button) @done (17-07-31 05:17)
      ✔ Friends (table for a profile) -- add seed @done (17-07-31 06:01)
      ✔ Navbar Money Amount -- in profile @done (17-07-31 03:33)
   ✔ Check StaticFile @done (17-07-31 06:26)
   ☐ Create a user
   ✔ Create superuser codereview codereview @done (17-07-31 06:42)
   ✔ Go and watch this course (payment check and if registered --- Create a Mixin). @done (17-07-31 06:42)
   ✔ Add a Crispyform form only for one model CreateCourse @done (17-07-31 06:59)
   ✔ Add flash message into the app so that I don't need to create another page @done (17-07-31 06:59)
   ✔ Upload on Github with Pictures and Videos @done (17-07-31 07:06)
   ✔ Course that a user gives @done (17-07-31 06:02)
   ✔ delete log @done (17-07-31 05:44)
   ✔ Login add template (MVP) @done (17-07-31 06:03)
   ✔ Try CreateCourse again @done (17-07-31 04:55)
   ✔ On the profile (Protected) page create a table with __sections__ for Friendship (rejected_requests + sent_requests + unread_requests) -- postpone @done (17-07-31 06:03)
 ✔ Django permission @done (17-07-31 06:03)
 ✔ add license @done (17-07-31 06:07)
 ☐ clean the app (Maybe download Atom editor)
 ✔ Finish this app today @done (17-07-31 07:06)
 ✔ Do only one test views.. @done (17-07-31 06:07)
 ✔ Add ReadMe.md @done (17-07-31 06:07)
 ☐ When finished review my goals and check other apps

Helper:
 ✔ Infinte scroll --- no need @done (17-07-31 07:07)
   ✔ https://simpleisbetterthancomplex.com/tutorial/2017/03/13/how-to-create-infinite-scroll-with-django.html @done (17-07-31 07:07)
 ☐ Card
   ☐ https://bootsnipp.com/snippets/aeqlE
   ☐ https://stackoverflow.com/questions/18172102/object-ownership-validation-in-django-updateview

Question:
 ☐ What is the difference between a user is deleting a view (AuthorMixin) and DeleteView

helps:
 ☐ https://github.com/ShareClass/ShareClass/blob/d204f7c80729bc024cd10bd527ff8667224c5ff3/shareclass/course/models.py
 ☐ https://github.com/search?o=desc&q=language%3Apython++filename%3Amodels.py+course+django&s=indexed&type=Code&utf8=%E2%9C%93

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ https://docs.djangoproject.com/en/1.11/howto/custom-template-tags/ @done (17-07-31 03:25) @project(Steps)
 ✔ Payments --- user (Fake payments system) @done (17-07-31 03:25) @project(Steps)
 ✔ Add relationship @done (17-07-31 03:25) @project(Steps)
 ✔ <i class="fa fa-eye" aria-hidden="true"></i> @done (17-07-31 03:25) @project(Steps)
 ✔ Payment @done (17-07-31 03:24) @project(Steps)
 ✔ BankAccount @done (17-07-31 03:21) @project(Steps)
 ✔ Try axios for Ajax button https://github.com/kumareshalfa/edocs-code/blob/710ff2ef9d82b3f74ce102c3792d1dfda6b4b2c5/anabond/views.py#L977 (ajax_url_code_review....) --- postpone @done (17-07-31 02:59) @project(Steps)
 ✔ homepage frontend add  like Detailpage (#minutes. timeago. Like button with TemplateTags ---) @done (17-07-31 02:49) @project(Steps)
 ✔ Templatetags registration (kind of templatetags see Django By Example) @done (17-07-30 08:14) @project(Steps)
 ✔ Constraint user Create course with the same title (Your Course Already Exist) @done (17-07-30 08:14) @project(Steps)
 ✔ Constraint Register to my own course @done (17-07-30 08:14) @project(Steps)
 ✔ Access to the Tutorial/courses page only if you payed () @done (17-07-30 08:14) @project(Steps)
 ✔ django-hitcount @done (17-07-30 08:12) @project(Steps)
 ✔ Check wireframe to see if it's good @done (17-07-30 08:12) @project(Steps)
 ✔ Add django-vote @done (17-07-30 08:12) @project(Steps)
 ✔ 5$ et minutes to customize @done (17-07-30 07:16) @project(Steps)
 ✔ Test the app (functionnal programming) @done (17-07-30 05:45) @project(Steps)
 ✔ Comment - Delete - Postpone @done (17-07-30 05:45) @project(Steps)
 ✔ Comment - Create - Postpone @done (17-07-30 05:45) @project(Steps)
 ✔ Prefetch/Select related mixin @done (17-07-30 05:44) @project(Steps)
 ✔ Do a MVP test (TDD) @done (17-07-30 05:44) @project(Steps)
 ✔ Do a MVP (frontend) --- real basic @done (17-07-30 05:44) @project(Steps)
 ✔ Add a video when the user is entering the courses that it payed @done (17-07-30 05:22) @project(Steps)
 ✔ Course pagination (Add pagination) @done (17-07-30 05:05) @project(Steps)
 ✔ Add messages in frontend @done (17-07-30 04:59) @project(Steps)
 ✔ fullname @done (17-07-30 04:51) @project(Steps)
 ✔ Userprofile.detail @done (17-07-30 04:51) @project(Steps)
 ✔ Detail @done (17-07-30 04:46) @project(Steps)
 ✔ Add custom slug @done (17-07-30 04:14) @project(Steps)
 ✔ Frontend to do @done (17-07-30 04:07) @project(Steps)
 ✔ Continue with the Frontend (integration of the Wireframe) finish it. MVP @done (17-07-29 07:15) @project(Steps)
 ✔ Footer @done (17-07-29 07:14) @project(Steps)
 ✔ Remove Categories @done (17-07-29 07:13) @project(Steps)
 ✔ NavBar @done (17-07-29 07:07) @project(Steps)
 ✔ Frontend MVP then CRUD @done (17-07-29 07:07) @project(Steps)
 ✔ CRUD app for (Course/Teacher/Register/) @done (17-07-29 07:07) @project(Steps)
 ✔ UnRegister - Delete @done (17-07-29 07:03) @project(Steps)
 ✔ Register - Create @done (17-07-29 07:03) @project(Steps)
 ✔ MyRegistration - List @done (17-07-29 07:03) @project(Steps)
 ✔ AuthorMixin @done (17-07-29 05:23) @project(Steps)
 ✔ Profile - Delete @done (17-07-29 05:08) @project(Steps)
 ✔ Profile - Update @done (17-07-29 05:05) @project(Steps)
 ✔ Profile - List @done (17-07-29 05:05) @project(Steps)
 ✔ Profile - Detail @done (17-07-29 04:54) @project(Steps)
 ✔ Course - Create @done (17-07-29 03:47) @project(Steps)
 ✔ Course - Update @done (17-07-29 03:43) @project(Steps)
 ✔ Courses - List @done (17-07-29 03:05) @project(Steps)
 ✔ Course - View @done (17-07-29 03:05) @project(Steps)
 ✔ Course - Detail @done (17-07-29 03:05) @project(Steps)
 ✔ Create front end @done (17-07-29 01:48) @project(Steps)
 ✔ create applications.elearning.urls.py @done (17-07-25 02:03) @project(Steps)
 ✔ Decide if I should do the template first @done (17-07-23 08:38) @project(Steps)
 ✔ Test the Models (have some issue there) @done (17-07-23 07:08) @project(Steps)
 ✔ Select which frontend framework to use @done (17-07-23 07:08) @project(Steps)
 ✔ Review the Models to see if it makes sense @done (17-07-23 07:08) @project(Steps)
 ✔ Do a wireframe @done (17-07-23 07:08) @project(Steps)
 ✔ Boostrap Material design @done (17-07-23 07:08) @project(Steps)
 ✔ Create an ERD (Entity-relationship-diagram) of the Model @done (17-07-19 02:03) @project(Steps)
 ✔ choose django==1.11 @done (17-07-19 01:07) @project(Steps)
 ✔ Start the application @done (17-07-19 01:07) @project(Steps)
 ✔ Set the project configuration for different environment @done (17-07-19 01:07) @project(Steps)
 ✔ Create a django project Last version minus 2 @done (17-07-19 01:07) @project(Steps)
 ✔ Choose the name of the project (codeforentrepreneurs) @done (17-07-19 01:07) @project(Steps)
